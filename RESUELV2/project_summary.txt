# Zepra Project Summary

## 1. Core Idea

Zepra is a Chrome extension designed to assist users in completing surveys by leveraging AI. It provides AI-generated answers, OCR capabilities, IP information, and a suite of tools to streamline the survey-taking process. The extension is a heavily modified and improved version of an earlier project, "RESUELV1," with a focus on a rich user experience, advanced features, and a consistent, visually appealing theme.

## 2. Key Features

### 2.1. AI-Powered Answers
- **Cerebras Provider:** Uses Cerebras for all AI-generated answers.
- **Model Choices:** Offers a selection of Cerebras-hosted models.
- **Context-Aware:** Maintains a short-term memory of the last 5 questions and answers to provide more relevant responses.
- **Multiple Modes:** Offers different modes for generating answers (Open-ended, MCQ, Scale, Yes/No, Auto-detect).

### 2.2. User Interface and Experience
- **Floating Bubble:** An animated, interactive bubble with a rainbow glow and lighting effects is present on every page, providing quick access to the extension's features.
- **Context Menu Integration:** Replaces a generic "Generate" button with a "Send to Zepra" option in the right-click context menu for selected text.
- **Interactive Modals:**
    - **Rainbow Modal:** A visually stunning modal with an animated rainbow border for displaying AI-generated answers.
    - **OCR Modal:** A dedicated window for showing OCR results with options to "Send to AI" or "Retake."
    - **New Survey Modal:** A window that displays clipboard content and initiates a countdown before typing.
    - **IP Information Modal:** A clean, themed modal for displaying detailed IP information.
- **Themed Design:** All UI elements, including the popup, options page, and modals, follow a consistent, dark, and futuristic theme inspired by the original RESUELV extension.

### 2.3. Advanced Tools
- **OCR (Optical Character Recognition):** Allows users to select a region of the screen to extract text from images, using the OCR.space API.
- **IP Information:** Fetches and displays detailed IP information (IP address, country, city, postal code, ISP, timezone) using ipapi.co with a fallback to api.ipify.org.
- **IP Qualification:** Scores the current IP via ip-score.com and displays a colored risk gauge with qualification status.
- **Human-like Typing:** Simulates human typing with configurable speeds (Fast, Normal, Slow).
- **New Survey Functionality:** A feature to start a new survey, which can be used to clear the context or for other survey-related actions.

## 3. Technical Implementation

### 3.1. Manifest V3
- The extension is built using Manifest V3 for Chrome extensions.
- It uses a service worker (`background.js`) for background tasks.
- Content scripts (`content.js`) are injected into web pages to provide the floating bubble and other in-page functionality.

### 3.2. APIs
- **Cerebras:** Primary provider for language model completions.
- **OCR.space:** For OCR functionality.
- **ipapi.co & api.ipify.org:** For fetching IP information.

### 3.3. Storage
- `chrome.storage.local` is used to store user settings, including API keys, selected models, and typing speed.

### 3.4. Key Files
- `manifest.json`: Defines the extension's structure, permissions, and capabilities.
- `background.js`: Handles background tasks, including API calls, context menu creation, and message listening.
- `content.js`: Manages all in-page UI elements, such as the floating bubble, modals, and OCR selection overlay.
- `popup.html` & `popup.js`: The main popup UI, providing access to different answer generation modes and displaying IP and history information.
- `options.html` & `options.js`: The options page for configuring API keys, model selection, and other settings.

## 4. Recent Modifications and Fixes

- **Context Menu:** Fixed the context menu not appearing by ensuring the content script is injected before sending a message.
- **IP Loading:** Resolved the IP loading issue by adding a `User-Agent` header to the fetch request and implementing a fallback API.
- **Service Worker:** Fixed the service worker registration error by removing `"type": "module"` from the manifest.
- **OCR and New Survey Modals:** Implemented dedicated modals for these features to improve user workflow.
- **UI Unification:** Ensured all new UI elements adhere to the established theme of the extension.
- **Navigation:** Added navigation arrows to the popup to cycle through different action buttons.
- **API Support:** Switched to Cerebras as the sole AI backend with selectable models.